# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

env:
  IMAGE_NAME: yaxin/blog-site

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.120.4
    steps:
      - name: Generate version
        id: build_version
        run: |
          ver="v$(date '+%y.%m%d.%H%M')"
          version_image="${IMAGE_NAME}:${ver}"
          latest_image="${IMAGE_NAME}:latest"
          echo "VERSION=$ver" >> $GITHUB_ENV
          echo "VERSION_IMAGE=$version_image" >> $GITHUB_ENV
          echo "LATEST_IMAGE=$latest_image" >> $GITHUB_ENV
          echo "VERSION=$ver" >> $GITHUB_OUTPUT
          echo "VERSION_IMAGE=$version_image" >> $GITHUB_OUTPUT
          echo "LATEST_IMAGE=$latest_image" >> $GITHUB_OUTPUT
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      # - name: Install Dart Sass Embedded
      #   run: sudo snap install dart-sass-embedded
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./public
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Debug info
        run: |
          pwd
          ls -al
      - name: Docker build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ steps.build_version.outputs.VERSION_IMAGE }}
            ${{ steps.build_version.outputs.LATEST_IMAGE }}

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
      - name: Deploy to machines
        run: |
          url=${{ secrets.DEPLOY_SERVER_APIS }}
          image=${{ steps.build_version.outputs.VERSION_IMAGE }}
          echo "Start to deploy image ${image} to ${url}"
          curl -v -H "Authorization: Bearer ${{ secrets.DEPLOY_TOKEN }}" "$url" -d '{"Image":"'${image}'"}'
